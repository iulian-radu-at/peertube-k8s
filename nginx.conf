# Minimum Nginx version required: 1.13.0 (released Apr 25, 2017)
# Please check your Nginx installation features the following modules via 'nginx -V':
# STANDARD HTTP MODULES: Core, Proxy, Rewrite, Access, Gzip, Headers, HTTP/2, Log, Real IP, SSL, Thread Pool, Upstream, AIO Multithreading.
# THIRD PARTY MODULES: None.

server {
  listen 80;
# include snippets/ssl-params.conf;

  root /var/www/peertube;
  server_name video.<YOUR_DOMAIN>;

  location / {
    try_files $uri @api;
  }

 location ~ ^/api/v1/videos/(upload-resumable|([^/]+/source/replace-resumable))$ {
    try_files /dev/null @api;

    client_max_body_size 0;
    proxy_request_buffering off;
  }

 location ~ ^/api/v1/videos/(upload|([^/]+/studio/edit))$ {
    limit_except POST HEAD { deny all; }
    try_files /dev/null @api;
 
    # This is the maximum upload size, which roughly matches the maximum size of a video file.
    # Note that temporary space is needed equal to the total size of all concurrent uploads.
    # This data gets stored in /var/lib/nginx by default, so you may want to put this directory
    # on a dedicated filesystem.
    client_max_body_size 12G; # default is 1M
    add_header X-File-Maximum-Size 8G always; # inform backend of the set value in bytes before mime-encoding (x * 1.4 >= client_max_body_size)
  }

  location ~ ^/api/v1/runners/jobs/[^/]+/(update|success)$ {
    try_files /dev/null @api;

    client_max_body_size 12G; # default is 1M
    add_header X-File-Maximum-Size 8G always; # inform backend of the set value in bytes before mime-encoding (x * 1.4 >= client_max_body_size)
  }

  location ~ ^/api/v1/(videos|video-playlists|video-channels|users/me) {
    try_files /dev/null @api;

    client_max_body_size 6M; # default is 1M
    add_header X-File-Maximum-Size 4M always; # inform backend of the set value in bytes before mime-encoding (x * 1.4 >= client_max_body_size)
  }

  location @api {
    proxy_pass http://127.0.0.1:<MAPPED_PORT_9000>;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;

    client_max_body_size 100k; # default is 1M

    proxy_connect_timeout 10m;
    proxy_send_timeout 10m;
    proxy_read_timeout 10m;
    send_timeout 10m;
  }

  location /socket.io {
    try_files /dev/null @api_websocket;
  }

  location /tracker/socket {
    try_files /dev/null @api_websocket;

    # Peers send a message to the tracker every 15 minutes
    # Don't close the websocket before then
    proxy_read_timeout 15m; # default is 60s
  }

  # Plugin websocket routes
  location ~ ^/plugins/[^/]+(/[^/]+)?/ws/ {
    try_files /dev/null @api_websocket;
  }

  location @api_websocket {
    proxy_pass http://127.0.0.1:<MAPPED_PORT_9000>;
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  # Enable compression for JS/CSS/HTML, for improved client load times.
  # It might be nice to compress JSON/XML as returned by the API, but
  # leaving that out to protect against potential BREACH attack.
  gzip on;
  gzip_vary on;
  gzip_types # text/html is always compressed by HttpGzipModule
    text/css
    application/javascript
    font/truetype
    font/opentype
    application/vnd.ms-fontobject
    image/svg+xml;
  gzip_min_length 1000; # default is 20 bytes
  gzip_buffers 16 8k;
  gzip_comp_level 2; # default is 1

  client_body_timeout 30s; # default is 60
  client_header_timeout 10s; # default is 60
  send_timeout 10s; # default is 60
  keepalive_timeout 10s; # default is 75
  resolver_timeout 10s; # default is 30
  reset_timedout_connection on;
  proxy_ignore_client_abort on;

  tcp_nopush on; # send headers in one piece
  tcp_nodelay on; # don't buffer data sent, good for small data bursts in real time

  # If you have a small /var/lib partition, it could be interesting to store temp nginx uploads in a different place
  # See https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_temp_path
  #client_body_temp_path /var/www/peertube/storage/nginx/;

  location ~ ^(/static/(webseed|web-videos|streaming-playlists/hls)/private/)|^/download {
    # We can't rate limit a try_files directive, so we need to duplicate @api
    proxy_pass http://127.0.0.1:<MAPPED_PORT_9000>;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_limit_rate 5M;
  }

  access_log /var/log/nginx/peertube-access.log; # reduce I/0 with buffer=10m flush=5m
  error_log /var/log/nginx/peertube-error.log;
}
